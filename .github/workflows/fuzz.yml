name: fuzzit

on:
  workflow_dispatch:
    inputs:
      domain:
        description: Enter the domain for enumeration (e.g., hackerone.com)
        required: true
        type: string

jobs:
  subdomain_enumeration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Install Tools
        run: |
          go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
          go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install -v github.com/ffuf/ffuf@latest

      - name: Run Subdomain Enumeration
        run: |
          domain="${{ github.event.inputs.domain }}"
          mkdir -p $domain

          subfinder -d "$domain" > "$domain/subfinder.txt"
          curl -s "https://crt.sh/?q=%25.$domain&output=json" | jq -r '.[].name_value' | sed 's/\*\.//g' > "$domain/crtsh.txt"

      - name: Combine All Subdomains
        run: |
          domain="${{ github.event.inputs.domain }}"
          cat "$domain/subfinder.txt" "$domain/crtsh.txt" | sort -u > "$domain/subdomains.txt"

      - name: Check HTTP Status Codes
        run: |
          domain="${{ github.event.inputs.domain }}"
          mkdir -p "$domain/httpx"
          cat "$domain/subdomains.txt" | httpx -status-code -o "$domain/httpx/urls_with_status.txt"

      - name: Split URLs by Status Code
        run: |
          domain="${{ github.event.inputs.domain }}"
          mkdir -p "$domain/split"

          grep '\[200\]' "$domain/httpx/urls_with_status.txt" | sed 's/ \[200\]$//' > "$domain/split/200.txt"
          grep '\[3[0-9][0-9]\|\[4[0-9][0-9]\|\[5[0-9][0-9]\]' "$domain/httpx/urls_with_status.txt" | sed 's/ \[[0-9]\{3\}\]$//' > "$domain/split/34X.txt"

      - name: Notify Telegram Bot with Sorted Results and Files
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          domain="${{ github.event.inputs.domain }}"
          count_200=$(wc -l < "$domain/split/200.txt" || echo 0)
          count_34X=$(wc -l < "$domain/split/34X.txt" || echo 0)

          message="Sorting completed for $domain:\n\n- URLs with status 200: $count_200\n- URLs with status codes 3XX, 4XX, or 5XX: $count_34X"

          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d "chat_id=${TELEGRAM_CHAT_ID}" \
              -d "text=$message"

          if [ -s "$domain/split/200.txt" ]; then
              curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
                  -F "chat_id=${TELEGRAM_CHAT_ID}" \
                  -F "document=@${domain}/split/200.txt" \
                  -F "caption=URLs with status 200 for $domain"
          fi

          if [ -s "$domain/split/34X.txt" ]; then
              curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument" \
                  -F "chat_id=${TELEGRAM_CHAT_ID}" \
                  -F "document=@${domain}/split/34X.txt" \
                  -F "caption=URLs with status 3XX, 4XX, or 5XX for $domain"
          fi
