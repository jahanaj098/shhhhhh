name: Fuzzing Automation with ffuf and Screenshot

on:
  workflow_dispatch:
    inputs:
      domain:
        description: "Enter the domain"
        required: true
        default: "example.com"

jobs:
  fuzzing_job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Create Domain Directory
      run: |
        mkdir -p "${{ github.event.inputs.domain }}"

    - name: Extract Domains
      run: |
        echo "[*] Extracting domains for ${{ github.event.inputs.domain }}..."
        # Example: Replace with your domain extraction logic
        echo ${{ github.event.inputs.domain }} > "${{ github.event.inputs.domain }}/200.txt"
        echo "test.${{ github.event.inputs.domain }}" > "${{ github.event.inputs.domain }}/other_status_codes.txt"

    - name: Fuzz with ffuf for 200 OK domains
      run: |
        mkdir -p "${{ github.event.inputs.domain }}/fuzzing_200"
        while read -r domain; do
          echo "[*] Testing protocol for $domain..."
          if curl -s --head --connect-timeout 5 http://$domain | grep "200 OK" > /dev/null; then
            protocol="http"
          elif curl -s --head --connect-timeout 5 https://$domain | grep "200 OK" > /dev/null; then
            protocol="https"
          else
            echo "[-] Unable to determine protocol for $domain. Skipping..."
            continue
          fi

          echo "[*] Fuzzing $protocol://$domain..."
          ffuf -u "$protocol://$domain/FUZZ" -w common.txt -ac -mc 200 -o "${{ github.event.inputs.domain }}/fuzzing_200/results_$domain.json"
          
          # Check if any valid response received and take a screenshot
          if [ -f "${{ github.event.inputs.domain }}/fuzzing_200/results_$domain.json" ]; then
            puppeteer --headless --screenshot --output="${{ github.event.inputs.domain }}/fuzzing_200/screenshot_$domain.png" "$protocol://$domain/.htaccess"
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" -F document=@"${{ github.event.inputs.domain }}/fuzzing_200/screenshot_$domain.png"
          fi
        done < "${{ github.event.inputs.domain }}/200.txt"

    - name: Fuzz with ffuf for other status code domains
      run: |
        mkdir -p "${{ github.event.inputs.domain }}/fuzzing_other"
        while read -r domain; do
          echo "[*] Testing protocol for $domain..."
          if curl -s --head --connect-timeout 5 http://$domain | grep "200 OK" > /dev/null; then
            protocol="http"
          elif curl -s --head --connect-timeout 5 https://$domain | grep "200 OK" > /dev/null; then
            protocol="https"
          else
            echo "[-] Unable to determine protocol for $domain. Skipping..."
            continue
          fi

          echo "[*] Fuzzing $protocol://$domain..."
          ffuf -u "$protocol://$domain/FUZZ" -w common.txt -ac -mc 400-599 -o "${{ github.event.inputs.domain }}/fuzzing_other/results_$domain.json"
          
          # Check if any valid response received and take a screenshot
          if [ -f "${{ github.event.inputs.domain }}/fuzzing_other/results_$domain.json" ]; then
            puppeteer --headless --screenshot --output="${{ github.event.inputs.domain }}/fuzzing_other/screenshot_$domain.png" "$protocol://$domain/.htaccess"
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" -F document=@"${{ github.event.inputs.domain }}/fuzzing_other/screenshot_$domain.png"
          fi
        done < "${{ github.event.inputs.domain }}/other_status_codes.txt"
